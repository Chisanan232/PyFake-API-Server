# Swagger API documentation config from Kotlin Spring library
name: ''
description: ''
mocked_apis:
  template:    # Optional
    activate: true
    values:
      api:
        base_file_path: './test/data/divide_test/has-base-info_and_tags_test/'    # Default value should be current path './'
        config_path:    # Default value should be None or empty string
        config_path_format: '{{ api.tag }}/{{ api.__name__ }}.yaml'    # ex. ./foo/get_foo.yaml
      request:
        base_file_path: './test/data/divide_test/has-base-info_and_tags_test/'
        config_path:
        config_path_format: '{{ api.tag }}/{{ api.__name__ }}-request.yaml'
      response:
        base_file_path: './test/data/divide_test/has-base-info_and_tags_test/'
        config_path:
        config_path_format: '{{ api.tag }}/{{ api.__name__ }}-response.yaml'
    apply:    # Which mocked APIs should apply template values
      # Have 4 different strategy for scanning files to load configuration:
      # 1. by_file_name: auto-use the format to find satisfied file naming to configure
      # 2. by_config_list: only use the list in config to find the satisfied file naming
      # 3. file_name_first: it would find the file naming by strategy *by_file_name* way. If it cannot find it, it would find it again by strategy *by_config_list*.
      # 4. config_list_first: it would find the file naming by strategy *by_config_list* way. If it cannot find it, it would find it again by strategy *by_file_name*.
      scan_strategy: file_name_first    # Default value is *file_name_first*
      api:    # Which mocked APIs should apply template values to its entire settings includes URL, request and response
        - foo:    # If it has tag, it could set the tag name as key and set the target APIs as list type value of the key
          - get_foo
          - put_foo
        - foo-boo:
          - get_foo-boo_export
  base:
    url: '/api/v1/test'
